(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{101:function(t,e,n){"use strict";function r(t){return!0===/^(\w*:|\/\/)/.test(t)}function o(t){return void 0!==t&&!r(t)}n.d(e,"b",(function(){return r})),n.d(e,"a",(function(){return o}))},84:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return c})),n.d(e,"metadata",(function(){return s})),n.d(e,"rightToc",(function(){return u})),n.d(e,"default",(function(){return d}));var r=n(2),o=n(6),i=(n(0),n(97)),a=n(99),c={id:"doc2",title:"Demonstration",slug:"/demonstration"},s={unversionedId:"doc2",id:"doc2",isDocsHomePage:!1,title:"Demonstration",description:"With EzGitDoc it's really simple and quick to create document for repository. Below you will find single example on how that process can look like. Used elements: image, badge(Shields.io), text, list, code, table with images. For demonstration purposes prototype was restricted to 6 elements. You can create as many elements as you want.",source:"@site/docs\\doc2_demonstration.md",slug:"/demonstration",permalink:"/EzGitDoc-documentation/demonstration",editUrl:"https://github.com/trolit/EzGitDoc-documentation/edit/main/docs/doc2_demonstration.md",version:"current",sidebar:"docs",previous:{title:"Support",permalink:"/EzGitDoc-documentation/support"},next:{title:"Quickstart",permalink:"/EzGitDoc-documentation/quick-start"}},u=[{value:"1. Design prototype",id:"1-design-prototype",children:[]},{value:"2. Get code",id:"2-get-code",children:[]},{value:"3. Preview outcome",id:"3-preview-outcome",children:[]},{value:"4. Adjust &amp; commit :)",id:"4-adjust--commit-",children:[]}],l={rightToc:u};function d(t){var e=t.components,n=Object(o.a)(t,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",{align:"justify"},"With EzGitDoc it's really simple and quick to create document for repository. Below you will find single example on how that process can look like. Used elements: image, badge(",Object(i.b)("a",{href:"https://shields.io/"},"Shields.io"),"), text, list, code, table with images. For demonstration purposes prototype was restricted to 6 elements. You can create as many elements as you want."),Object(i.b)("h3",{id:"1-design-prototype"},"1. Design prototype"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:Object(a.a)("img/demonstration/d01.png"),alt:"EzGitDoc Demonstration - 1"})),Object(i.b)("h3",{id:"2-get-code"},"2. Get code"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-git"}),'<p align="center"><img src="https://cdn.pixabay.com/photo/2015/04/20/13/17/work-731198_1280.jpg" alt="banner image" width="200"/></p>\n\n<img src="https://img.shields.io/badge/Subject-Computer%20Programming-red?color=552BE2&style=flat-square" alt="to do: add alt text"/>\n\n<p align="justify">Computer programming is the process of designing and building an executable computer program to accomplish a specific computing result or to perform a specific task. Source: <a href="https://en.wikipedia.org/wiki/Computer_programming">Wikipedia</a></p>\n\n```java\nprivate Integer addTwoIntegers(Integer a, Integer b) {\n  return a + b;\n}\n```\n\n- <a href="https://en.wikipedia.org/wiki/Software_testing">testing</a>\n- <a href="https://en.wikipedia.org/wiki/Debugging">debugging</a>\n\n<p align="center">\n<kbd><img src="https://place-hold.it/200x100" alt="alt text" width="200" height="100"/></kbd> \n<kbd><img src="https://place-hold.it/200x100" alt="alt text" width="200" height="100"/></kbd> \n<br/> \n<kbd><img src="https://place-hold.it/200x100" alt="alt text" width="200" height="100"/></kbd> \n<kbd><img src="https://place-hold.it/200x100" alt="alt text" width="200" height="100"/></kbd> \n</p>\n\nTemplate created on 12/10/2020 <br/> in <a href="https://github.com/trolit/EzGitDoc">EzGitDoc</a>\n')),Object(i.b)("h3",{id:"3-preview-outcome"},"3. Preview outcome"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:Object(a.a)("img/demonstration/d02.png"),alt:"EzGitDoc Demonstration - 2"})),Object(i.b)("h3",{id:"4-adjust--commit-"},"4. Adjust & commit :)"),Object(i.b)("p",{align:"center"},Object(i.b)("img",{src:Object(a.a)("img/demonstration/d03.png"),alt:"EzGitDoc Demonstration - 3"})))}d.isMDXComponent=!0},97:function(t,e,n){"use strict";n.d(e,"a",(function(){return d})),n.d(e,"b",(function(){return g}));var r=n(0),o=n.n(r);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function c(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},i=Object.keys(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(r=0;r<i.length;r++)n=i[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var u=o.a.createContext({}),l=function(t){var e=o.a.useContext(u),n=e;return t&&(n="function"==typeof t?t(e):c(c({},e),t)),n},d=function(t){var e=l(t.components);return o.a.createElement(u.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return o.a.createElement(o.a.Fragment,{},e)}},m=o.a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,a=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),d=l(n),m=r,g=d["".concat(a,".").concat(m)]||d[m]||p[m]||i;return n?o.a.createElement(g,c(c({ref:e},u),{},{components:n})):o.a.createElement(g,c({ref:e},u))}));function g(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,a=new Array(i);a[0]=m;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:r,a[1]=c;for(var u=2;u<i;u++)a[u]=n[u];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},98:function(t,e,n){"use strict";var r=n(0),o=n(20);e.a=function(){var t=Object(r.useContext)(o.a);if(null===t)throw new Error("Docusaurus context not provided");return t}},99:function(t,e,n){"use strict";n.d(e,"b",(function(){return i})),n.d(e,"a",(function(){return a}));var r=n(98),o=n(101);function i(){var t=Object(r.a)().siteConfig,e=(t=void 0===t?{}:t).baseUrl,n=void 0===e?"/":e,i=t.url;return{withBaseUrl:function(t,e){return function(t,e,n,r){var i=void 0===r?{}:r,a=i.forcePrependBaseUrl,c=void 0!==a&&a,s=i.absolute,u=void 0!==s&&s;if(!n)return n;if(n.startsWith("#"))return n;if(Object(o.b)(n))return n;if(c)return e+n;var l=n.startsWith(e)?n:e+n.replace(/^\//,"");return u?t+l:l}(i,n,t,e)}}}function a(t,e){return void 0===e&&(e={}),(0,i().withBaseUrl)(t,e)}}}]);